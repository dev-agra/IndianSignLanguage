# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from beam_runner_api_pb2 import (
    Components as beam_runner_api_pb2___Components,
    PTransform as beam_runner_api_pb2___PTransform,
)

from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
    Union as typing___Union,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode


class ExpansionRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    namespace = ... # type: typing___Text

    @property
    def components(self) -> beam_runner_api_pb2___Components: ...

    @property
    def transform(self) -> beam_runner_api_pb2___PTransform: ...

    def __init__(self,
        *,
        components : typing___Optional[beam_runner_api_pb2___Components] = None,
        transform : typing___Optional[beam_runner_api_pb2___PTransform] = None,
        namespace : typing___Optional[typing___Text] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> ExpansionRequest: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> ExpansionRequest: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"components",u"transform"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"components",u"namespace",u"transform"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"components",b"components",u"transform",b"transform"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"components",b"components",u"namespace",b"namespace",u"transform",b"transform"]) -> None: ...

class ExpansionResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    requirements = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text]
    error = ... # type: typing___Text

    @property
    def components(self) -> beam_runner_api_pb2___Components: ...

    @property
    def transform(self) -> beam_runner_api_pb2___PTransform: ...

    def __init__(self,
        *,
        components : typing___Optional[beam_runner_api_pb2___Components] = None,
        transform : typing___Optional[beam_runner_api_pb2___PTransform] = None,
        requirements : typing___Optional[typing___Iterable[typing___Text]] = None,
        error : typing___Optional[typing___Text] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> ExpansionResponse: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> ExpansionResponse: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    if sys.version_info >= (3,):
        def HasField(self, field_name: typing_extensions___Literal[u"components",u"transform"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"components",u"error",u"requirements",u"transform"]) -> None: ...
    else:
        def HasField(self, field_name: typing_extensions___Literal[u"components",b"components",u"transform",b"transform"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"components",b"components",u"error",b"error",u"requirements",b"requirements",u"transform",b"transform"]) -> None: ...
